import posthog from "posthog-js";

posthog.init("phc_oMjrIuZhJP4ZPjjaj8a4j8DMVb0DI8tPJjfGPkewcVu", {
  api_host: "https://us.i.posthog.com",
  person_profiles: "identified_only", // or 'always' to create profiles for anonymous users as well
});

// The following code was generated by v0.1.0 //

const ranahPhotoreel = [
  { name: "Photo 1", image: "/placeholder.svg?height=300&width=300" },
  { name: "Photo 2", image: "/placeholder.svg?height=300&width=300" },
  { name: "Photo 3", image: "/placeholder.svg?height=300&width=300" },
];

class Photoreel {
  constructor() {
    this.currentIndex = 0;
    this.isHovering = false;
    this.spreadDirections = [];
    this.container = document.getElementById("photoreel");

    this.init();
    this.setupEventListeners();
  }

  init() {
    // Create photo elements
    ranahPhotoreel.forEach((photo, index) => {
      const photoDiv = document.createElement("div");
      photoDiv.className =
        "absolute inset-0 transition-all duration-300 ease-out";

      const innerDiv = document.createElement("div");
      innerDiv.className =
        "relative w-full h-full shadow-lg rounded-lg overflow-hidden";

      const img = document.createElement("img");
      img.src = photo.image;
      img.alt = photo.name;
      img.className = "w-full h-full object-cover";

      innerDiv.appendChild(img);
      photoDiv.appendChild(innerDiv);
      this.container.appendChild(photoDiv);
    });

    this.updatePhotoPositions();
  }

  generateSpreadDirections() {
    return ranahPhotoreel.map(() => ({
      x: Math.random() * 60 - 30,
      y: Math.random() * 60 - 30,
    }));
  }

  updatePhotoPositions() {
    const photos = this.container.children;
    Array.from(photos).forEach((photo, index) => {
      const orderIndex =
        (index - this.currentIndex + ranahPhotoreel.length) %
        ranahPhotoreel.length;
      const spreadDirection = this.spreadDirections[index] || { x: 0, y: 0 };

      photo.style.zIndex = ranahPhotoreel.length - orderIndex;

      if (this.isHovering) {
        photo.style.transform = `translate(${spreadDirection.x}px, ${
          spreadDirection.y
        }px) rotate(${orderIndex * 2}deg)`;
      } else {
        photo.style.transform = `rotate(${orderIndex * 2}deg)`;
      }

      photo.style.transformOrigin = "center center";
    });
  }

  setupEventListeners() {
    this.container.addEventListener("click", () => {
      this.currentIndex = (this.currentIndex + 1) % ranahPhotoreel.length;
      this.updatePhotoPositions();
    });

    this.container.addEventListener("mouseenter", () => {
      this.isHovering = true;
      this.spreadDirections = this.generateSpreadDirections();
      this.updatePhotoPositions();
    });

    this.container.addEventListener("mouseleave", () => {
      this.isHovering = false;
      this.updatePhotoPositions();
    });
  }
}

// Initialize the photoreel when the DOM is loaded
document.addEventListener("DOMContentLoaded", () => {
  new Photoreel();
});
